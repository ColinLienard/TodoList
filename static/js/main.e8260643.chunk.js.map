{"version":3,"sources":["components/Clock.jsx","components/Todo.jsx","components/AddTodo.jsx","components/TodoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["DAYS","MONTHS","Clock","useState","Date","date","setDate","useEffect","timer","setInterval","clearInterval","className","getHours","getMinutes","getDay","getDate","getMonth","TextArea","forwardRef","ref","defaultValue","onValueChange","edit","value","setValue","areaHeight","setAreaHeight","current","scrollHeight","rows","style","height","onChange","event","target","Todo","todo","checkTodo","editTodo","deleteTodo","checked","check","setCheck","setEdit","inputEdit","useRef","importance","content","postedAt","day","time","type","id","src","alt","onClick","blur","focus","today","AddTodo","add","setContent","setDay","setTime","setImportance","visible","setVisible","handleChange","setState","onSubmit","preventDefault","month","alert","htmlFor","name","placeholder","step","LAST_ID","TodoList","JSON","parse","localStorage","getItem","todos","setTodos","filter","todo1","todos1","setTodos1","todo2","todos2","setTodos2","todo3","todos3","setTodos3","setItem","stringify","handleCheck","index","map","handleEdit","handleDelete","window","confirm","handleAdd","forEach","length","App","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8260643.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst DAYS = [\r\n    \"Lundi\",\r\n    \"Mardi\",\r\n    \"Mercredi\",\r\n    \"Jeudi\",\r\n    \"Vendredi\",\r\n    \"Samedi\",\r\n    \"Dimanche\"\r\n]\r\n\r\nconst MONTHS = [\r\n    \"janvier\",\r\n    \"février\",\r\n    \"mars\",\r\n    \"avril\",\r\n    \"mai\",\r\n    \"juin\",\r\n    \"juillet\",\r\n    \"août\",\r\n    \"septembre\",\r\n    \"octobre\",\r\n    \"novembre\",\r\n    \"décembre\"\r\n]\r\n\r\nexport const Clock = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const timer = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000)\r\n\r\n        return (() => {\r\n            clearInterval(timer);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"pretitle\">Il est</h2>\r\n            <h3 className=\"title\">{date.getHours() < 10 ? \"0\" : \"\"}{date.getHours()}:{date.getMinutes() < 10 ? \"0\" : \"\"}{date.getMinutes()}</h3>\r\n            <p className=\"subtitle\">{DAYS[date.getDay() - 1]} {date.getDate()} {MONTHS[date.getMonth()]}</p>\r\n        </>\r\n    )\r\n}","import React, { useState, useRef, useEffect, forwardRef } from \"react\";\r\n\r\nconst DAYS = [\r\n    \"lundi\",\r\n    \"mardi\",\r\n    \"mercredi\",\r\n    \"jeudi\",\r\n    \"vendredi\",\r\n    \"samedi\",\r\n    \"dimanche\"\r\n]\r\n\r\nconst TextArea = forwardRef(({defaultValue, onValueChange, edit}, ref) => {\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [areaHeight, setAreaHeight] = useState(\"auto\");\r\n\r\n    useEffect(() => {\r\n        setAreaHeight(`${ref.current.scrollHeight + 2}px`);\r\n    }, [value, ref])\r\n\r\n    const handleChange = (event) => {\r\n        setAreaHeight(\"auto\");\r\n        setValue(event.target.value);\r\n        onValueChange(event);\r\n    }\r\n\r\n    return (\r\n        <textarea className={`content ${edit ? \"edit\" : \"\"}`} ref={ref} rows={1} style={{height: areaHeight}} value={value} onChange={handleChange}/>\r\n    )\r\n})\r\n\r\nexport const Todo = ({todo, checkTodo, editTodo, deleteTodo}) => {\r\n    const [value, setValue] = useState(todo);\r\n    const [check, setCheck] = useState(value.checked);\r\n    const [edit, setEdit] = useState(false);\r\n\r\n    const inputEdit = useRef(null);\r\n\r\n    const handleCheck = () => {\r\n        if(!edit) {\r\n            setCheck(check => !check);\r\n            checkTodo(value.id);\r\n        }\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        if(edit) {\r\n            editTodo(value.id, value.content);\r\n            inputEdit.current.blur();\r\n        }\r\n        else\r\n            inputEdit.current.focus();\r\n        setEdit(edit => !edit);\r\n    }\r\n\r\n    const handleEditContent = (event) => setValue(value => ({...value, content: event.target.value}));\r\n    \r\n    return (\r\n        <li className={`todo importance-${value.importance} ${check ? \"checked\": \"\"}`}>\r\n            <div className=\"indicator\"/>\r\n            <TextArea ref={inputEdit} defaultValue={value.content} onValueChange={handleEditContent} edit={edit}/>\r\n            {check ? null : <p className=\"posted\">postée le {value.postedAt}</p>}\r\n            <p className=\"date\">pour {DAYS[value.day - 1]} à {value.time}</p>\r\n            <div className=\"button-container\">\r\n                <div className=\"checkbox\">\r\n                    <input type=\"checkbox\" onChange={handleCheck} checked={check}/>\r\n                    <img className={check ? \"cross\" : \"\"} src={`/assets/${check ? \"cross\" : \"check\"}.svg`} alt=\"\"/>\r\n                </div>\r\n                {check ?\r\n                    null :\r\n                    <div className=\"little-button-container\">\r\n                        <button className=\"little-button\" onClick={handleEdit}>\r\n                            <img src={`/assets/${edit ? \"save.svg\" : \"edit.svg\"}`} alt=\"\"/>\r\n                        </button>\r\n                        <button className=\"little-button\" onClick={() => deleteTodo(value.id)}>\r\n                            <img src=\"/assets/trashcan.svg\" alt=\"\"/>\r\n                        </button>                    \r\n                    </div>\r\n                }\r\n            </div>\r\n        </li>\r\n    )\r\n}","import React, { useState } from \"react\";\r\n\r\nconst today = new Date();\r\n\r\nexport const AddTodo = ({add}) => {\r\n    const [content, setContent] = useState(\"\");\r\n    const [day, setDay] = useState(\"1\");\r\n    const [time, setTime] = useState(\"12:00\");\r\n    const [importance, setImportance] = useState(\"2\");\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    const handleChange = (event, setState) => setState(event.target.value);\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if(content !== \"\") {\r\n            setContent(\"\");\r\n            setDay(\"1\");\r\n            setTime(\"12:00\");\r\n            setImportance(\"2\");\r\n            setVisible(false);\r\n            const date = today.getDate();\r\n            const month = today.getMonth() + 1;\r\n            add(content, day, time, importance, (date < 10 ? \"0\" + date : date) + \"/\" + (month < 10 ? \"0\" + month : month));\r\n        }\r\n        else\r\n            alert(\"Tous les champs doivent être remplis.\");\r\n    }\r\n\r\n    const toggleVisible = () => setVisible(visible => !visible);\r\n\r\n    return (\r\n        <>\r\n            <button className=\"toggle-add\" onClick={toggleVisible}>\r\n                <img className={`image ${visible ? \"close\" : \"add\"}`} src=\"/assets/cross.svg\" alt=\"\" />\r\n            </button>\r\n            <div className=\"background-dark-gradient\"/>\r\n            <form className={`form-add ${visible ? \"open\" : \"\"}`} onSubmit={handleSubmit}>\r\n                <p className=\"title\">Ajouter une tâche</p>\r\n                <label htmlFor=\"content\">Tâche</label>\r\n                <textarea type=\"text\" name=\"content\" placeholder=\"Rendez-vous chez...\" value={content} onChange={event => handleChange(event, setContent)}/>\r\n                <div className=\"container\">\r\n                    <label htmlFor=\"day\">pour</label>\r\n                    <select name=\"day\" value={day} onChange={event => handleChange(event, setDay)}>\r\n                        <option value=\"1\">Lundi</option>\r\n                        <option value=\"2\">Mardi</option>\r\n                        <option value=\"3\">Mercredi</option>\r\n                        <option value=\"4\">Jeudi</option>\r\n                        <option value=\"5\">Vendredi</option>\r\n                        <option value=\"6\">Samedi</option>\r\n                        <option value=\"7\">Dimanche</option>\r\n                    </select>\r\n                    <label htmlFor=\"time\">à</label>\r\n                    <input type=\"time\" name=\"time\" step=\"900\" value={time} onChange={event => handleChange(event, setTime)}/>\r\n                </div>\r\n                <label htmlFor=\"importance\">Importance</label>\r\n                <select name=\"importance\" value={importance} onChange={event => handleChange(event, setImportance)}>\r\n                    <option value=\"1\">Urgent</option>\r\n                    <option value=\"2\">À ne pas oublier</option>\r\n                    <option value=\"3\">Ça peut attendre</option>\r\n                </select>\r\n                <button className=\"submit\">Ajouter</button>\r\n            </form>\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { Todo } from \"./Todo\";\r\nimport { AddTodo } from \"./AddTodo\";\r\n\r\nlet LAST_ID = 0;\r\n\r\nexport const TodoList = () => {\r\n    const [todos, setTodos] = useState(() => JSON.parse(localStorage.getItem(\"todos\")));\r\n    const [todos1, setTodos1] = useState(todos.filter(todo1 => todo1.importance === \"1\" && !todo1.checked));\r\n    const [todos2, setTodos2] = useState(todos.filter(todo2 => todo2.importance === \"2\" && !todo2.checked));\r\n    const [todos3, setTodos3] = useState(todos.filter(todo3 => todo3.importance === \"3\" && !todo3.checked));\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n        setTodos1(todos.filter(todo1 => todo1.importance === \"1\" && !todo1.checked));\r\n        setTodos2(todos.filter(todo2 => todo2.importance === \"2\" && !todo2.checked));\r\n        setTodos3(todos.filter(todo3 => todo3.importance === \"3\" && !todo3.checked));\r\n    }, [todos])\r\n\r\n    const handleCheck = (index) => {\r\n        setTodos(todos => todos.map(todo => ({\r\n            ...todo,\r\n            checked: todo.id === index ? !todo.checked : todo.checked\r\n        })))\r\n    }\r\n\r\n    const handleEdit = (index, content) => {\r\n        setTodos(todos => todos.map(todo => ({\r\n            ...todo,\r\n            content: todo.id === index ? content : todo.content\r\n        })))\r\n    }\r\n\r\n    const handleDelete = (index) => {\r\n        if(window.confirm(\"Étes-vous sûr de vouloir supprimer cette tâche ?\"))\r\n            setTodos(todos => todos.filter(todo => todo.id !== index));\r\n    }\r\n\r\n    const handleAdd = (content, day, time, importance, postedAt) => {\r\n        todos.forEach(todo => {\r\n            if(LAST_ID <= todo.id)\r\n                LAST_ID = todo.id + 1;\r\n        });\r\n        setTodos(todos => [...todos, {\r\n            id: LAST_ID,\r\n            content: content,\r\n            day: day,\r\n            time: time,\r\n            importance: importance,\r\n            postedAt: postedAt,\r\n            checked: false\r\n        }]);\r\n    }\r\n    \r\n    if(todos.length === 0) {\r\n        return (\r\n            <>\r\n                <p>Vous n'avez aucune tâche</p>\r\n                <AddTodo add={handleAdd}/>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"todo-list\">\r\n            <section className=\"part\">\r\n                <h4 className=\"list-title\">Vos tâches urgentes 🔥</h4>\r\n                <ul>\r\n                    {todos1.length > 0 ?\r\n                        todos1.map(todo =>\r\n                            <Todo\r\n                                key={todo.id}\r\n                                todo={todo}\r\n                                checkTodo={handleCheck}\r\n                                editTodo={handleEdit}\r\n                                deleteTodo={handleDelete}\r\n                            />\r\n                        ) :\r\n                        <p className=\"list-void\">Vous n'avez aucune tâche urgente, ouf !</p>\r\n                    }\r\n                </ul>\r\n            </section>\r\n            <section className=\"part\">\r\n                <h4 className=\"list-title\">À ne pas oublier ⌛</h4>\r\n                <ul>\r\n                    {todos2.length > 0 ?\r\n                        todos2.map(todo =>\r\n                            <Todo\r\n                                key={todo.id}\r\n                                todo={todo}\r\n                                checkTodo={handleCheck}\r\n                                editTodo={handleEdit}\r\n                                deleteTodo={handleDelete}\r\n                            />\r\n                        ) :\r\n                        <p className=\"list-void\">Vous n'avez aucune tâche importante.</p>\r\n                    }\r\n                </ul>\r\n            </section>\r\n            <section className=\"part\">\r\n                <h4 className=\"list-title\">Ça peut attendre 🤙</h4>\r\n                <ul>\r\n                    {todos3.length > 0 ?\r\n                        todos3.map(todo =>\r\n                            <Todo\r\n                                key={todo.id}\r\n                                todo={todo}\r\n                                checkTodo={handleCheck}\r\n                                editTodo={handleEdit}\r\n                                deleteTodo={handleDelete}\r\n                            />\r\n                        ) :\r\n                        <p className=\"list-void\">Vous n'avez aucune tâche secondaire.</p>\r\n                    }\r\n                </ul>\r\n            </section>\r\n            <section className=\"part\">\r\n                <h4 className=\"list-title\">Tâches terminées ✔</h4>\r\n                <ul>\r\n                    {todos.map(todo =>\r\n                        todo.checked ?\r\n                        <Todo\r\n                            key={todo.id}\r\n                            todo={todo}\r\n                            checkTodo={handleCheck}\r\n                            editTodo={handleEdit}\r\n                            deleteTodo={handleDelete}\r\n                        /> :\r\n                        null\r\n                    )}\r\n                </ul>\r\n            </section>\r\n            <AddTodo add={handleAdd}/>\r\n        </div>\r\n    )\r\n}","import \"./App.scss\";\nimport { Clock } from \"./components/Clock\";\nimport { TodoList } from \"./components/TodoList\";\n\nfunction App() {\n    return (\n        <>\n            <header className=\"header\">\n                <img className=\"logo\" src=\"/assets/logo.svg\" alt=\"\" />\n                <Clock/>\n            </header>\n            <div className=\"gradient-1\"/>\n            <div className=\"gradient-2\"/>\n            <TodoList/>\n            <footer className=\"footer\">\n                <p>Site créé en React par <a href=\"https://colin-lienard.fr/\">Colin Lienard</a></p>\n            </footer>\n        </>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}